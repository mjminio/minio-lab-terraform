- name: Set SELinux to disabled state
  ansible.posix.selinux:
    state: disabled
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux']

- name: Enable IPv4 forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    state: present
    reload: yes

- name: Enable IPv6 forwarding
  sysctl:
    name: net.ipv6.conf.all.forwarding
    value: "1"
    state: present
    reload: yes

- name: Add br_netfilter to /etc/modules-load.d/
  copy:
    content: "br_netfilter"
    dest: /etc/modules-load.d/br_netfilter.conf
    mode: "u=rw,g=,o="
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux']

- name: Load br_netfilter
  community.general.modprobe:
    name: br_netfilter
    state: present
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux']

- name: Set bridge-nf-call-iptables (just to be sure)
  sysctl:
    name: "{{ item }}"
    value: "1"
    state: present
    reload: yes
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux']
  loop:
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-ip6tables

- name: Add /usr/local/bin to sudo secure_path
  lineinfile:
    line: 'Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin'
    regexp: "Defaults(\\s)*secure_path(\\s)*="
    state: present
    insertafter: EOF
    path: /etc/sudoers
    validate: 'visudo -cf %s'
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux']

- name: Set a hostname
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"

- name: Add hostname to /etc/hosts
  lineinfile:
    dest: /etc/hosts
    regexp: '^127\.0\.0\.1[ \t]+localhost'
    line: '127.0.0.1 localhost {{ ansible_hostname }} {{ ansible_hostname }}.{{ environment_domain }}'
    state: present
  tags: hostsfile

- name: Add local hostname to 127.0.1.1 in /etc/hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    regexp: '^127\.0\.1\.1.*'
    line: '127.0.1.1 {{ ansible_hostname }} {{ ansible_hostname }}.{{ environment_domain }}'
    insertafter: '^127\.0\.0\.1.*'
  tags: hostsfile

- name: Install apt packages
  apt:
    name:
    - haproxy
    - haveged
    state: present
    update_cache: true
  register: apt_action
  retries: 100
  until: apt_action is success or ('Failed to lock apt for exclusive operation' not in apt_action.msg and '/var/lib/dpkg/lock' not in apt_action.msg)

- name: Backup existing haproxy.cfg
  ansible.builtin.command: mv /etc/haproxy/haproxy.cfg /etc/haproxy/haproxy.cfg.orig
  tags: haproxy
  ignore_errors: yes

- name: Copy haproxy.cfg file
  ansible.builtin.copy:
    src: files/{{ deployment_name }}/haproxy.cfg
    dest: /etc/haproxy/
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: '0777'
  tags: haproxy

- name: Restart haproxy
  ansible.builtin.service:
    name: haproxy
    state: restarted
  tags: haproxy