---
- name: Create /home/{{ user }}/.kube directory
  ansible.builtin.file:
    path: /home/{{ user }}/.kube
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: '0755'
  tags: kind

- name: Create kind directory
  ansible.builtin.file:
    path: /home/{{ user }}/kind
    state: directory
    mode: '0777'
    owner: "{{ user }}"
    group: "{{ user }}"
  tags: kind

- name: Create certs directory
  ansible.builtin.file:
    path: /home/{{ user }}/certs
    state: directory
    mode: '0777'
    owner: "{{ user }}"
    group: "{{ user }}"
  tags: kind

- name: Copy kind-config file
  ansible.builtin.copy:
    src: files/kind-config.yml
    dest: /home/{{ user }}/kind
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: '0777'
  tags: kind

- name: Install apt packages
  apt:
    name:
      - podman
      - podman-docker
      - python3-pip
    state: present
    update_cache: true
  register: apt_action
  retries: 100
  until: apt_action is success or ('Failed to lock apt for exclusive operation' not in apt_action.msg and '/var/lib/dpkg/lock' not in apt_action.msg)
  tags: kind

- name: Set podman registries
  shell: sudo sed -i "s/# unqualified-search-registries.*/unqualified-search-registries\ =\ [\"docker.io\"]/" /etc/containers/registries.conf
  tags: kind

- name: Download and install podman
  become_user: "{{ user }}"
  shell: pip3 install podman-compose --user --break-system-packages
  tags: kind

- name: Download and install kind
  shell: curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64 && chmod +x ./kind && sudo mv ./kind /usr/local/bin/kind
  args:
    chdir: /home/{{ user }}/kind
  tags: kind

- name: Delete kind cluster
  become_user: "{{ user }}"
  shell: kind delete cluster
  args:
    chdir: /home/{{ user }}/kind
  tags: kind

- name: Create kind cluster
  become_user: "{{ user }}"
  shell: kind create cluster --config kind-config.yml
  args:
    chdir: /home/{{ user }}/kind
  tags: kind

- name: Install ingress-nginx
  become_user: "{{ user }}"
  shell: helm upgrade --install ingress-nginx ingress-nginx --version 4.4.2 --repo https://kubernetes.github.io/ingress-nginx --namespace ingress-nginx --create-namespace --set controller.replicaCount=1 --set controller.ingressClassResource.default=true --set controller.service.nodePorts.http=31000 --set controller.service.nodePorts.https=31001 --set controller.service.ports.http=8080 --set controller.service.ports.https=8443
  tags: kind